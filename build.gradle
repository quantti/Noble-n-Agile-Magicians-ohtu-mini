/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */
plugins {
  id 'com.github.johnrengelman.shadow' version '2.0.1'
}
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'info.cukes:cucumber-java:1.2.5'
    testCompile 'info.cukes:cucumber-junit:1.2.5'
    testCompile 'junit:junit:4.12'
    compile 'org.xerial:sqlite-jdbc:3.21.+'
}

mainClassName = 'noble.lukuvinkki.main.Main'

run {
    standardInput = System.in
}

jar {
    manifest {
        attributes 'Main-Class': 'noble.lukuvinkki.main.Main'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it,
                    exclude: ['main/**'])
            })
    }
}

//check.dependsOn 'checkstyle'

task checkstyleMain(type: Checkstyle, overwrite: true) {
    configFile file("config/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("config//checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/App.java'
    exclude '**/Main.java'

    classpath = files()
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}